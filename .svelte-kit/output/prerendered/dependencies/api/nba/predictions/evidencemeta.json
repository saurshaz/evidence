{"queries":[{"id":"future_games","compiledQueryString":"SELECT\n    game_id,\n    date,\n    CASE WHEN type = 'tournament' THEN '🏆' \n        WHEN type = 'knockout' THEN '🥊'\n        ELSE '' END \n    AS \"T\",\n    visiting_team as visitor,\n    visiting_team_elo_rating AS visitor_ELO,\n    home_team as home, \n    home_team_elo_rating AS home_ELO,\n    home_team_elo_rating - visiting_team_elo_rating AS elo_diff,\n    elo_diff + 100 AS elo_diff_hfa,\n    home_team_win_probability/10000 AS home_win_pct1,\n    american_odds,\n    implied_line AS implied_line_num1,\n    predicted_score,\n    type,\n    '/nba/predictions/' || (game_id::int) as game_link\nFROM src_reg_season_predictions\nWHERE include_actuals = false AND winning_team = home_team\nORDER BY game_id","inputQueryString":"SELECT\n    game_id,\n    date,\n    CASE WHEN type = 'tournament' THEN '🏆' \n        WHEN type = 'knockout' THEN '🥊'\n        ELSE '' END \n    AS \"T\",\n    visiting_team as visitor,\n    visiting_team_elo_rating AS visitor_ELO,\n    home_team as home, \n    home_team_elo_rating AS home_ELO,\n    home_team_elo_rating - visiting_team_elo_rating AS elo_diff,\n    elo_diff + 100 AS elo_diff_hfa,\n    home_team_win_probability/10000 AS home_win_pct1,\n    american_odds,\n    implied_line AS implied_line_num1,\n    predicted_score,\n    type,\n    '/nba/predictions/' || (game_id::int) as game_link\nFROM src_reg_season_predictions\nWHERE include_actuals = false AND winning_team = home_team\nORDER BY game_id","compiled":false,"inline":false},{"id":"past_games","compiledQueryString":"SELECT *,\n    CASE\n        WHEN (home_team_win_probability > 5000.0 AND winning_team = home_team)\n            OR (home_team_win_probability < 5000.0 AND winning_team = visiting_team)\n            THEN 1 ELSE 0 END AS 'accurate_guess'\nFROM src_reg_season_predictions\nWHERE include_actuals = true\nORDER BY game_id","inputQueryString":"SELECT *,\n    CASE\n        WHEN (home_team_win_probability > 5000.0 AND winning_team = home_team)\n            OR (home_team_win_probability < 5000.0 AND winning_team = visiting_team)\n            THEN 1 ELSE 0 END AS 'accurate_guess'\nFROM src_reg_season_predictions\nWHERE include_actuals = true\nORDER BY game_id","compiled":false,"inline":false},{"id":"past_games_summary","compiledQueryString":"SELECT\n    COUNT(*) as total_games_played, \n    SUM(accurate_guess) AS correct_predictions,\n    correct_predictions/total_games_played::real AS accuracy_pct1\nFROM (SELECT *,\n    CASE\n        WHEN (home_team_win_probability > 5000.0 AND winning_team = home_team)\n            OR (home_team_win_probability < 5000.0 AND winning_team = visiting_team)\n            THEN 1 ELSE 0 END AS 'accurate_guess'\nFROM src_reg_season_predictions\nWHERE include_actuals = true\nORDER BY game_id)","inputQueryString":"SELECT\n    COUNT(*) as total_games_played, \n    SUM(accurate_guess) AS correct_predictions,\n    correct_predictions/total_games_played::real AS accuracy_pct1\nFROM ${past_games}","compiled":true,"inline":false},{"id":"past_games_summary_by_team","compiledQueryString":"WITH cte_team AS \n    (SELECT winning_team AS team FROM (SELECT *,\n    CASE\n        WHEN (home_team_win_probability > 5000.0 AND winning_team = home_team)\n            OR (home_team_win_probability < 5000.0 AND winning_team = visiting_team)\n            THEN 1 ELSE 0 END AS 'accurate_guess'\nFROM src_reg_season_predictions\nWHERE include_actuals = true\nORDER BY game_id) GROUP BY ALL)\nSELECT\n    T.Team,\n    COUNT(*) as total_games_played, \n    SUM(PG.accurate_guess) AS correct_predictions,\n    correct_predictions/total_games_played::real AS accuracy_pct1\nFROM (SELECT *,\n    CASE\n        WHEN (home_team_win_probability > 5000.0 AND winning_team = home_team)\n            OR (home_team_win_probability < 5000.0 AND winning_team = visiting_team)\n            THEN 1 ELSE 0 END AS 'accurate_guess'\nFROM src_reg_season_predictions\nWHERE include_actuals = true\nORDER BY game_id) PG\n    LEFT JOIN cte_team T ON T.team = PG.visiting_team OR T.Team = PG.home_team\nGROUP BY ALL\nORDER BY accuracy_pct1 DESC","inputQueryString":"WITH cte_team AS \n    (SELECT winning_team AS team FROM ${past_games} GROUP BY ALL)\nSELECT\n    T.Team,\n    COUNT(*) as total_games_played, \n    SUM(PG.accurate_guess) AS correct_predictions,\n    correct_predictions/total_games_played::real AS accuracy_pct1\nFROM ${past_games} PG\n    LEFT JOIN cte_team T ON T.team = PG.visiting_team OR T.Team = PG.home_team\nGROUP BY ALL\nORDER BY accuracy_pct1 DESC","compiled":true,"inline":false},{"id":"teams","compiledQueryString":"select * from src_nba_teams\norder by team","inputQueryString":"select * from src_nba_teams\norder by team","compiled":false,"inline":true},{"id":"filtered_future_games","compiledQueryString":"select * EXCLUDE (game_id), game_id::int as game_id\n    from (SELECT\n    game_id,\n    date,\n    CASE WHEN type = 'tournament' THEN '🏆' \n        WHEN type = 'knockout' THEN '🥊'\n        ELSE '' END \n    AS \"T\",\n    visiting_team as visitor,\n    visiting_team_elo_rating AS visitor_ELO,\n    home_team as home, \n    home_team_elo_rating AS home_ELO,\n    home_team_elo_rating - visiting_team_elo_rating AS elo_diff,\n    elo_diff + 100 AS elo_diff_hfa,\n    home_team_win_probability/10000 AS home_win_pct1,\n    american_odds,\n    implied_line AS implied_line_num1,\n    predicted_score,\n    type,\n    '/nba/predictions/' || (game_id::int) as game_link\nFROM src_reg_season_predictions\nWHERE include_actuals = false AND winning_team = home_team\nORDER BY game_id)\n    where home like '${inputs.team_dropdown.value}' OR visitor like '${inputs.team_dropdown.value}'","inputQueryString":"select * EXCLUDE (game_id), game_id::int as game_id\n    from ${future_games}\n    where home like '${inputs.team_dropdown.value}' OR visitor like '${inputs.team_dropdown.value}'","compiled":true,"inline":true}]}